name: ci_pipeline

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ingestion_lookback_days:
        description: The number of days into the past for which to ingest data for
        required: true
        default: 2

env:
  CICD_RUN: True
  DATA_DIR: "/home/runner/work/medium_scraper/medium_scraper/output"
  DBT_PROFILES_DIR: "${{ github.workspace }}/dbt"
  DBT_PROJECT_DIR: "${{ github.workspace }}/dbt"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  INGESTION_LOOKBACK_WINDOW: '${{ github.event.inputs.ingestion_lookback_days || 2 }}'
  PAT_GITHUB:  ${{ secrets.PAT_GITHUB }}

jobs:
  ci_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        id: setup-python

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
            virtualenvs-create: true
            virtualenvs-in-project: true
            installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
            path: .venv
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi

      - run: poetry run spacy download en_core_web_sm

      - run: poetry run pre-commit run -a

      - run: poetry run ingestion

      - run: poetry run transformation

      - run: poetry run data_products
        env:
          RECIPIENT_EMAIL_ADDRESS: 123@mailslurp.com
          SENDER_EMAIL_ADDRESS: ${{ secrets.SENDER_EMAIL_ADDRESS }}
          SENDER_EMAIL_PASSWORD: ${{ secrets.SENDER_EMAIL_PASSWORD }}

  automerge_pull_requests:
    needs: [ci_pipeline]
    runs-on: ubuntu-latest
    steps:
      - name: Merge pull request
        uses: pascalgn/automerge-action@v0.15.6
        env:
          MERGE_METHOD: "squash"
